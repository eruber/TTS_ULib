--- Output related functions
-- @module output
-- @license MIT
-- @author E.R. Uber

if not package.loaded['output'] then
    output = {}
    package.loaded['output'] = output

    --- Recursively print arbitrary data structure
    -- @tparam data struct A data structure like a table, etc
    -- @tparam int limit Set limit (default 100) to stop infinite loops.
    -- @tparam int indent Indents each line by this many spaces
    -- @treturn int The limit count reached
    function output.rPrint = function(s, l, i)
        -- Original source from https://gist.github.com/stuby/5445834
        l = (l) or 100
        i = i or ""
        if (l<1) then print "ERROR: Item limit reached."; return l-1 end;
        local ts = type(s);
        if (ts ~= "table") then print (i," ",ts," ",s); return l-1 end
        print (i,ts);           -- print "table"
        for k,v in pairs(s) do  -- print "[KEY] VALUE"
            l = rPrint(v, l, i.."\t["..tostring(k).."]");
            if (l < 0) then break end
        end
        return l
    end

end

